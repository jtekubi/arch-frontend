{"version":3,"file":"formik.esm.js","sources":["../src/utils.ts","../src/FormikContext.tsx","../src/Formik.tsx","../src/hooks.tsx","../src/Field.tsx","../src/Form.tsx","../src/withFormik.tsx","../src/connect.tsx","../src/FieldArray.tsx","../src/ErrorMessage.tsx","../src/FastField.tsx"],"sourcesContent":["import clone from 'lodash/clone';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n// Assertions\n\n/** @private is the value an empty array? */\nexport const isEmptyArray = (value?: any) =>\n  Array.isArray(value) && value.length === 0;\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): obj is Object =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/** @private is the given object/value a type of synthetic event? */\nexport const isInputEvent = (value: any): value is React.SyntheticEvent<any> =>\n  value && isObject(value) && isObject(value.target);\n\n/** @private Are we in RN? */\nexport const isReactNative =\n  typeof window !== 'undefined' &&\n  window.navigator &&\n  window.navigator.product &&\n  window.navigator.product === 'ReactNative';\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via it's path. If the value at `path`\n * has changed, return a shallow copy of obj with `value` set at `path`.\n * If `value` has not changed, return the original `obj`.\n *\n * Existing objects / arrays along `path` are also shallow copied. Sibling\n * objects along path retain the same internal js reference. Since new\n * objects / arrays are only created along `path`, we can test if anything\n * changed in a nested structure by comparing the object's reference in\n * the old and new object, similar to how russian doll cache invalidation\n * works.\n *\n * In earlier versions of this function, which used cloneDeep, there were\n * issues whereby settings a nested value would mutate the parent\n * instead of creating a new object. `clone` avoids that bug making a\n * shallow copy of the objects along the update path\n * so no object is mutated in place.\n *\n * Before changing this function, please read through the following\n * discussions.\n *\n * @see https://github.com/developit/linkstate\n * @see https://github.com/jaredpalmer/formik/pull/123\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = clone(obj); // this keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n\n/** Return multi select values based on an array of options */\nexport function getSelectedValues(options: any[]) {\n  const result = [];\n  if (options) {\n    for (let index = 0; index < options.length; index++) {\n      const option = options[index];\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n  return result;\n}\n\n/** Return the next value for a checkbox */\nexport function getValueForCheckbox(\n  currentValue: string | any[],\n  checked: boolean,\n  valueProp: any\n) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  }\n\n  // If the currentValue was not a boolean we want to return an array\n  let currentArrayOfValues = [];\n  let isValueInArray = false;\n  let index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  }\n\n  // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  }\n\n  // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  }\n\n  // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n  return currentArrayOfValues\n    .slice(0, index)\n    .concat(currentArrayOfValues.slice(index + 1));\n}\n\nexport const defaultParseFn = (value: unknown, _name: string) => value;\n\nexport const numberParseFn = (value: any, _name: string) => {\n  const parsed = parseFloat(value);\n  return isNaN(parsed) ? '' : parsed;\n};\n\nexport const defaultFormatFn = (value: unknown, _name: string) =>\n  value === undefined ? '' : value;\n\n/** Get the value out of a React Synthetic event given some form state. Works cross-platform. */\nexport const getValueFromEvent = (\n  event: React.SyntheticEvent<any>,\n  valueState: any\n) => {\n  // React Native/Expo Web/maybe other render envs\n  if (\n    !isReactNative &&\n    event.nativeEvent &&\n    (event.nativeEvent as any).text !== undefined\n  ) {\n    return (event.nativeEvent as any).text;\n  }\n\n  // React Native\n  if (isReactNative && event.nativeEvent) {\n    return (event.nativeEvent as any).text;\n  }\n\n  const target = event.target ? event.target : event.currentTarget;\n  const { type, value, checked, options, multiple } = target;\n\n  return /checkbox/.test(type) // checkboxes\n    ? getValueForCheckbox(valueState, checked, value)\n    : !!multiple // <select multiple>\n    ? getSelectedValues(options)\n    : value;\n};\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport {\n  createContext,\n  useContext,\n  useContextSelector,\n} from 'use-context-selector';\nimport invariant from 'tiny-warning';\n\nexport const FormikContext = createContext<FormikContextType<any>>(\n  undefined as any\n);\n\nexport const FormikProvider = FormikContext.Provider;\n\nexport function useFormikContext<Values>() {\n  return useContext<FormikContextType<Values>>(FormikContext);\n}\n\nexport function FormikConsumer<Values = any>({\n  children,\n}: {\n  children: (formik: FormikContextType<Values>) => React.ReactNode;\n}) {\n  const formik = useFormikContext<Values>();\n\n  invariant(\n    !!formik,\n    `Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.`\n  );\n\n  return <>{children(formik)}</>;\n}\n\nexport function useFormikContextSelector<Values = any, Slice = any>(\n  selector: (value: FormikContextType<Values>) => Slice\n): Slice {\n  return useContextSelector(FormikContext, selector);\n}\n","import * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash/isPlainObject';\nimport {\n  FormikConfig,\n  FormikErrors,\n  FormikState,\n  FormikTouched,\n  FormikValues,\n  FormikProps,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FormikHelpers,\n  FormikHandlers,\n} from './types';\nimport {\n  isFunction,\n  isString,\n  setIn,\n  isEmptyChildren,\n  isPromise,\n  setNestedObjectValues,\n  getActiveElement,\n  getIn,\n  isObject,\n  isInputEvent,\n  isReactNative,\n  getSelectedValues,\n  getValueForCheckbox,\n  defaultParseFn,\n  numberParseFn,\n  defaultFormatFn,\n} from './utils';\nimport { FormikProvider } from './FormikContext';\nimport invariant from 'tiny-warning';\n\ntype FormikMessage<Values> =\n  | { type: 'SUBMIT_ATTEMPT' }\n  | { type: 'SUBMIT_FAILURE' }\n  | { type: 'SUBMIT_SUCCESS' }\n  | { type: 'SET_ISVALIDATING'; payload: boolean }\n  | { type: 'SET_ISSUBMITTING'; payload: boolean }\n  | { type: 'SET_VALUES'; payload: Values }\n  | { type: 'SET_FIELD_VALUE'; payload: { field: string; value?: any } }\n  | { type: 'SET_FIELD_TOUCHED'; payload: { field: string; value?: boolean } }\n  | { type: 'SET_FIELD_ERROR'; payload: { field: string; value?: string } }\n  | { type: 'SET_TOUCHED'; payload: FormikTouched<Values> }\n  | { type: 'SET_ERRORS'; payload: FormikErrors<Values> }\n  | { type: 'SET_STATUS'; payload: any }\n  | {\n      type: 'SET_FORMIK_STATE';\n      payload: (s: FormikState<Values>) => FormikState<Values>;\n    }\n  | {\n      type: 'RESET_FORM';\n      payload: FormikState<Values>;\n    };\n\n// State reducer\nfunction formikReducer<Values>(\n  state: FormikState<Values>,\n  msg: FormikMessage<Values>\n) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return { ...state, values: msg.payload };\n    case 'SET_TOUCHED':\n      return { ...state, touched: msg.payload };\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return { ...state, errors: msg.payload };\n    case 'SET_STATUS':\n      return { ...state, status: msg.payload };\n    case 'SET_ISSUBMITTING':\n      return { ...state, isSubmitting: msg.payload };\n    case 'SET_ISVALIDATING':\n      return { ...state, isValidating: msg.payload };\n    case 'SET_FIELD_VALUE':\n      return {\n        ...state,\n        values: setIn(state.values, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_TOUCHED':\n      return {\n        ...state,\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_ERROR':\n      return {\n        ...state,\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value),\n      };\n    case 'RESET_FORM':\n      return { ...state, ...msg.payload };\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n    case 'SUBMIT_ATTEMPT':\n      return {\n        ...state,\n        touched: setNestedObjectValues<FormikTouched<Values>>(\n          state.values,\n          true\n        ),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1,\n      };\n    case 'SUBMIT_FAILURE':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    case 'SUBMIT_SUCCESS':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n}\n\n// Initial empty states // objects\nconst emptyErrors: FormikErrors<unknown> = {};\nconst emptyTouched: FormikTouched<unknown> = {};\n\n// This is an object that contains a map of all registered fields\n// and their validate functions\ninterface FieldRegistry {\n  [field: string]: {\n    validate: (value: any) => string | Promise<string> | undefined;\n  };\n}\n\nexport function useFormik<Values extends FormikValues = FormikValues>({\n  validateOnChange = true,\n  validateOnBlur = true,\n  validateOnMount = false,\n  isInitialValid,\n  enableReinitialize = false,\n  onSubmit,\n  ...rest\n}: FormikConfig<Values>) {\n  const props = {\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    onSubmit,\n    ...rest,\n  };\n  const initialValues = React.useRef(props.initialValues);\n  const initialErrors = React.useRef(props.initialErrors || emptyErrors);\n  const initialTouched = React.useRef(props.initialTouched || emptyTouched);\n  const initialStatus = React.useRef(props.initialStatus);\n  const isMounted = React.useRef<boolean>(false);\n  const fieldRegistry = React.useRef<FieldRegistry>({});\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        typeof isInitialValid === 'undefined',\n        'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  React.useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<FormikState<Values>, FormikMessage<Values>>\n  >(formikReducer, {\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0,\n  });\n\n  const runValidateHandler = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      return new Promise((resolve, reject) => {\n        const maybePromisedErrors = (props.validate as any)(values, field);\n        if (maybePromisedErrors == null) {\n          // use loose null check here on purpose\n          resolve(emptyErrors);\n        } else if (isPromise(maybePromisedErrors)) {\n          (maybePromisedErrors as Promise<any>).then(\n            errors => {\n              resolve(errors || emptyErrors);\n            },\n            actualException => {\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validate />`,\n                  actualException\n                );\n              }\n\n              reject(actualException);\n            }\n          );\n        } else {\n          resolve(maybePromisedErrors);\n        }\n      });\n    },\n    [props.validate]\n  );\n\n  /**\n   * Run validation against a Yup schema and optionally run a function if successful\n   */\n  const runValidationSchema = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      const validationSchema = props.validationSchema;\n      const schema = isFunction(validationSchema)\n        ? validationSchema(field)\n        : validationSchema;\n      const promise =\n        field && schema.validateAt\n          ? schema.validateAt(field, values)\n          : validateYupSchema(values, schema);\n      return new Promise((resolve, reject) => {\n        promise.then(\n          () => {\n            resolve(emptyErrors);\n          },\n          (err: any) => {\n            // Yup will throw a validation error if validation fails. We catch those and\n            // resolve them into Formik errors. We can sniff if something is a Yup error\n            // by checking error.name.\n            // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n            if (err.name === 'ValidationError') {\n              resolve(yupToFormErrors(err));\n            } else {\n              // We throw any other errors\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validationSchema />`,\n                  err\n                );\n              }\n\n              reject(err);\n            }\n          }\n        );\n      });\n    },\n    [props.validationSchema]\n  );\n\n  const runSingleFieldLevelValidation = React.useCallback(\n    (field: string, value: void | string): Promise<string> => {\n      return new Promise(resolve =>\n        resolve(fieldRegistry.current[field].validate(value) as string)\n      );\n    },\n    []\n  );\n\n  const runFieldLevelValidations = React.useCallback(\n    (values: Values): Promise<FormikErrors<Values>> => {\n      const fieldKeysWithValidation: string[] = Object.keys(\n        fieldRegistry.current\n      ).filter(f => isFunction(fieldRegistry.current[f].validate));\n\n      // Construct an array with all of the field validation functions\n      const fieldValidations: Promise<string>[] =\n        fieldKeysWithValidation.length > 0\n          ? fieldKeysWithValidation.map(f =>\n              runSingleFieldLevelValidation(f, getIn(values, f))\n            )\n          : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n      return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\n        fieldErrorsList.reduce((prev, curr, index) => {\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n            return prev;\n          }\n          if (curr) {\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\n          }\n          return prev;\n        }, {})\n      );\n    },\n    [runSingleFieldLevelValidation]\n  );\n\n  // Run all validations and return the result\n  const runAllValidations = React.useCallback(\n    (values: Values) => {\n      return Promise.all([\n        runFieldLevelValidations(values),\n        props.validationSchema ? runValidationSchema(values) : {},\n        props.validate ? runValidateHandler(values) : {},\n      ]).then(([fieldErrors, schemaErrors, validateErrors]) => {\n        const combinedErrors = deepmerge.all<FormikErrors<Values>>(\n          [fieldErrors, schemaErrors, validateErrors],\n          { arrayMerge }\n        );\n        return combinedErrors;\n      });\n    },\n    [\n      props.validate,\n      props.validationSchema,\n      runFieldLevelValidations,\n      runValidateHandler,\n      runValidationSchema,\n    ]\n  );\n\n  // Run all validations methods and update state accordingly\n  const validateFormWithHighPriority = useEventCallback(\n    (values: Values = state.values) => {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runAllValidations(values).then(combinedErrors => {\n        if (!!isMounted.current) {\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          if (!isEqual(state.errors, combinedErrors)) {\n            dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n          }\n        }\n        return combinedErrors;\n      });\n    }\n  );\n\n  React.useEffect(() => {\n    if (\n      validateOnMount &&\n      isMounted.current === true &&\n      isEqual(initialValues.current, props.initialValues)\n    ) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n\n  const resetForm = React.useCallback(\n    (nextState?: Partial<FormikState<Values>>) => {\n      const values =\n        nextState && nextState.values\n          ? nextState.values\n          : initialValues.current;\n      const errors =\n        nextState && nextState.errors\n          ? nextState.errors\n          : initialErrors.current\n          ? initialErrors.current\n          : props.initialErrors || {};\n      const touched =\n        nextState && nextState.touched\n          ? nextState.touched\n          : initialTouched.current\n          ? initialTouched.current\n          : props.initialTouched || {};\n      const status =\n        nextState && nextState.status\n          ? nextState.status\n          : initialStatus.current\n          ? initialStatus.current\n          : props.initialStatus;\n      initialValues.current = values;\n      initialErrors.current = errors;\n      initialTouched.current = touched;\n      initialStatus.current = status;\n\n      const dispatchFn = () => {\n        dispatch({\n          type: 'RESET_FORM',\n          payload: {\n            isSubmitting: !!nextState && !!nextState.isSubmitting,\n            errors,\n            touched,\n            status,\n            values,\n            isValidating: !!nextState && !!nextState.isValidating,\n            submitCount:\n              !!nextState &&\n              !!nextState.submitCount &&\n              typeof nextState.submitCount === 'number'\n                ? nextState.submitCount\n                : 0,\n          },\n        });\n      };\n\n      if (props.onReset) {\n        const maybePromisedOnReset = (props.onReset as any)(\n          state.values,\n          imperativeMethods\n        );\n\n        if (isPromise(maybePromisedOnReset)) {\n          (maybePromisedOnReset as Promise<any>).then(dispatchFn);\n        } else {\n          dispatchFn();\n        }\n      } else {\n        dispatchFn();\n      }\n    },\n    [props.initialErrors, props.initialStatus, props.initialTouched]\n  );\n\n  React.useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !isEqual(initialValues.current, props.initialValues)\n    ) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n      }\n\n      if (validateOnMount) {\n        validateFormWithHighPriority(initialValues.current);\n      }\n    }\n  }, [\n    enableReinitialize,\n    props.initialValues,\n    resetForm,\n    validateOnMount,\n    validateFormWithHighPriority,\n  ]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialErrors.current, props.initialErrors)\n    ) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors,\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialTouched.current, props.initialTouched)\n    ) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched,\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialStatus.current, props.initialStatus)\n    ) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus,\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n\n  const validateField = useEventCallback((name: string) => {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n\n    if (\n      fieldRegistry.current[name] &&\n      isFunction(fieldRegistry.current[name].validate)\n    ) {\n      const value = getIn(state.values, name);\n      const maybePromise = fieldRegistry.current[name].validate(value);\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({ type: 'SET_ISVALIDATING', payload: true });\n        return maybePromise\n          .then((x: any) => x)\n          .then((error: string) => {\n            dispatch({\n              type: 'SET_FIELD_ERROR',\n              payload: { field: name, value: error },\n            });\n            dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise as string | undefined,\n          },\n        });\n        return Promise.resolve(maybePromise as string | undefined);\n      }\n    } else if (props.validationSchema) {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runValidationSchema(state.values, name)\n        .then((x: any) => x)\n        .then((error: any) => {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: { field: name, value: error[name] },\n          });\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n        });\n    }\n\n    return Promise.resolve();\n  });\n\n  const registerField = React.useCallback((name: string, { validate }: any) => {\n    fieldRegistry.current[name] = {\n      validate,\n    };\n  }, []);\n\n  const unregisterField = React.useCallback((name: string) => {\n    delete fieldRegistry.current[name];\n  }, []);\n\n  const setTouched = useEventCallback(\n    (touched: FormikTouched<Values>, shouldValidate?: boolean) => {\n      dispatch({ type: 'SET_TOUCHED', payload: touched });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const setErrors = React.useCallback((errors: FormikErrors<Values>) => {\n    dispatch({ type: 'SET_ERRORS', payload: errors });\n  }, []);\n\n  const setValues = useEventCallback(\n    (values: React.SetStateAction<Values>, shouldValidate?: boolean) => {\n      const resolvedValues = isFunction(values) ? values(state.values) : values;\n\n      dispatch({ type: 'SET_VALUES', payload: resolvedValues });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(resolvedValues)\n        : Promise.resolve();\n    }\n  );\n\n  const setFieldError = React.useCallback(\n    (field: string, value: string | undefined) => {\n      dispatch({\n        type: 'SET_FIELD_ERROR',\n        payload: { field, value },\n      });\n    },\n    []\n  );\n\n  const setFieldValue = useEventCallback(\n    (field: string, value: any, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_VALUE',\n        payload: {\n          field,\n          value,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(setIn(state.values, field, value))\n        : Promise.resolve();\n    }\n  );\n\n  const executeChange = React.useCallback(\n    (eventOrTextValue: string | React.ChangeEvent<any>, maybePath?: string) => {\n      // By default, assume that the first argument is a string. This allows us to use\n      // handleChange with React Native and React Native Web's onChangeText prop which\n      // provides just the value of the input.\n      let field = maybePath;\n      let val = eventOrTextValue;\n      let parsed;\n      // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n      // so we handle like we would a normal HTML change event.\n      if (!isString(eventOrTextValue)) {\n        // If we can, persist the event\n        // @see https://reactjs.org/docs/events.html#event-pooling\n        if ((eventOrTextValue as any).persist) {\n          (eventOrTextValue as React.ChangeEvent<any>).persist();\n        }\n        const target = eventOrTextValue.target\n          ? (eventOrTextValue as React.ChangeEvent<any>).target\n          : (eventOrTextValue as React.ChangeEvent<any>).currentTarget;\n\n        const {\n          type,\n          name,\n          id,\n          value,\n          checked,\n          outerHTML,\n          options,\n          multiple,\n        } = target;\n\n        field = maybePath ? maybePath : name ? name : id;\n        if (!field && __DEV__) {\n          warnAboutMissingIdentifier({\n            htmlContent: outerHTML,\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n            handlerName: 'handleChange',\n          });\n        }\n        val = /number|range/.test(type)\n          ? ((parsed = parseFloat(value)), isNaN(parsed) ? '' : parsed)\n          : /checkbox/.test(type) // checkboxes\n          ? getValueForCheckbox(getIn(state.values, field!), checked, value)\n          : !!multiple // <select multiple>\n          ? getSelectedValues(options)\n          : value;\n      }\n\n      if (field) {\n        // Set form fields by name\n        setFieldValue(field, val);\n      }\n    },\n    [setFieldValue, state.values]\n  );\n\n  const handleChange = useEventCallback<FormikHandlers['handleChange']>(\n    (\n      eventOrPath: string | React.ChangeEvent<any>\n    ): void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void) => {\n      if (isString(eventOrPath)) {\n        return event => executeChange(event, eventOrPath);\n      } else {\n        executeChange(eventOrPath);\n      }\n    }\n  );\n\n  const setFieldTouched = useEventCallback(\n    (field: string, touched: boolean = true, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_TOUCHED',\n        payload: {\n          field,\n          value: touched,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const executeBlur = React.useCallback(\n    (e: any, path?: string) => {\n      if (e.persist) {\n        e.persist();\n      }\n      const { name, id, outerHTML } = e.target;\n      const field = path ? path : name ? name : id;\n\n      if (!field && __DEV__) {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handleblur-e-any--void',\n          handlerName: 'handleBlur',\n        });\n      }\n\n      setFieldTouched(field, true);\n    },\n    [setFieldTouched]\n  );\n\n  const handleBlur = useEventCallback<FormikHandlers['handleBlur']>(\n    (eventOrString: any): void | ((e: any) => void) => {\n      if (isString(eventOrString)) {\n        return event => executeBlur(event, eventOrString);\n      } else {\n        executeBlur(eventOrString);\n      }\n    }\n  );\n\n  const setFormikState = React.useCallback(\n    (\n      stateOrCb:\n        | FormikState<Values>\n        | ((state: FormikState<Values>) => FormikState<Values>)\n    ): void => {\n      if (isFunction(stateOrCb)) {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb });\n      } else {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: () => stateOrCb });\n      }\n    },\n    []\n  );\n\n  const setStatus = React.useCallback((status: any) => {\n    dispatch({ type: 'SET_STATUS', payload: status });\n  }, []);\n\n  const setSubmitting = React.useCallback((isSubmitting: boolean) => {\n    dispatch({ type: 'SET_ISSUBMITTING', payload: isSubmitting });\n  }, []);\n\n  const submitForm = useEventCallback(() => {\n    dispatch({ type: 'SUBMIT_ATTEMPT' });\n    return validateFormWithHighPriority().then(\n      (combinedErrors: FormikErrors<Values>) => {\n        // In case an error was thrown and passed to the resolved Promise,\n        // `combinedErrors` can be an instance of an Error. We need to check\n        // that and abort the submit.\n        // If we don't do that, calling `Object.keys(new Error())` yields an\n        // empty array, which causes the validation to pass and the form\n        // to be submitted.\n\n        const isInstanceOfError = combinedErrors instanceof Error;\n        const isActuallyValid =\n          !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n        if (isActuallyValid) {\n          // Proceed with submit...\n          //\n          // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n          // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n          // This would be fine in simple cases, but make it impossible to disable submit\n          // buttons where people use callbacks or promises as side effects (which is basically\n          // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n          //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n          // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n          // cleanup of isSubmitting on behalf of the consumer.\n          let promiseOrUndefined;\n          try {\n            promiseOrUndefined = executeSubmit();\n            // Bail if it's sync, consumer is responsible for cleaning up\n            // via setSubmitting(false)\n            if (promiseOrUndefined === undefined) {\n              return;\n            }\n          } catch (error) {\n            throw error;\n          }\n\n          return Promise.resolve(promiseOrUndefined)\n            .then(result => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_SUCCESS' });\n              }\n              return result;\n            })\n            .catch(_errors => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_FAILURE' });\n                // This is a legit error rejected by the onSubmit fn\n                // so we don't want to break the promise chain\n                throw _errors;\n              }\n            });\n        } else if (!!isMounted.current) {\n          // ^^^ Make sure Formik is still mounted before updating state\n          dispatch({ type: 'SUBMIT_FAILURE' });\n          // throw combinedErrors;\n          if (isInstanceOfError) {\n            throw combinedErrors;\n          }\n        }\n        return;\n      }\n    );\n  });\n\n  const handleSubmit = useEventCallback(\n    (e?: React.FormEvent<HTMLFormElement>) => {\n      if (e && e.preventDefault && isFunction(e.preventDefault)) {\n        e.preventDefault();\n      }\n\n      if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n        e.stopPropagation();\n      }\n\n      // Warn if form submission is triggered by a <button> without a\n      // specified `type` attribute during development. This mitigates\n      // a common gotcha in forms with both reset and submit buttons,\n      // where the dev forgets to add type=\"button\" to the reset button.\n      if (__DEV__ && typeof document !== 'undefined') {\n        // Safely get the active element (works with IE)\n        const activeElement = getActiveElement();\n        if (\n          activeElement !== null &&\n          activeElement instanceof HTMLButtonElement\n        ) {\n          invariant(\n            activeElement.attributes &&\n              activeElement.attributes.getNamedItem('type'),\n            'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\n          );\n        }\n      }\n\n      submitForm().catch(reason => {\n        console.warn(\n          `Warning: An unhandled error was caught from submitForm()`,\n          reason\n        );\n      });\n    }\n  );\n\n  const imperativeMethods: FormikHelpers<Values> = {\n    resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    setErrors,\n    setFieldError,\n    setFieldTouched,\n    setFieldValue,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    setFormikState,\n    submitForm,\n  };\n\n  const executeSubmit = useEventCallback(() => {\n    return onSubmit(state.values, imperativeMethods);\n  });\n\n  const handleReset = useEventCallback(e => {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n\n  const getFieldMeta = React.useCallback(\n    (name: string): FieldMetaProps<any> => {\n      return {\n        value: getIn(state.values, name),\n        error: getIn(state.errors, name),\n        touched: !!getIn(state.touched, name),\n        initialValue: getIn(initialValues.current, name),\n        initialTouched: !!getIn(initialTouched.current, name),\n        initialError: getIn(initialErrors.current, name),\n      };\n    },\n    [state.errors, state.touched, state.values]\n  );\n\n  const getFieldHelpers = useEventCallback(\n    (name: string): FieldHelperProps<any> => {\n      return {\n        setValue: (value: any, shouldValidate?: boolean) =>\n          setFieldValue(name, value, shouldValidate),\n        setTouched: (value: boolean, shouldValidate?: boolean) =>\n          setFieldTouched(name, value, shouldValidate),\n        setError: (value: any) => setFieldError(name, value),\n      };\n    }\n  );\n\n  const getValueFromEvent = useEventCallback(\n    (event: React.SyntheticEvent<any>, fieldName: string) => {\n      // React Native/Expo Web/maybe other render envs\n      if (\n        !isReactNative &&\n        event.nativeEvent &&\n        (event.nativeEvent as any).text !== undefined\n      ) {\n        return (event.nativeEvent as any).text;\n      }\n\n      // React Native\n      if (isReactNative && event.nativeEvent) {\n        return (event.nativeEvent as any).text;\n      }\n\n      const target = event.target ? event.target : event.currentTarget;\n      const { type, value, checked, options, multiple } = target;\n\n      return /checkbox/.test(type) // checkboxes\n        ? getValueForCheckbox(getIn(state.values, fieldName!), checked, value)\n        : !!multiple // <select multiple>\n        ? getSelectedValues(options)\n        : value;\n    }\n  );\n\n  const getFieldProps = React.useCallback(\n    (nameOrOptions): FieldInputProps<any> => {\n      const isAnObject = isObject(nameOrOptions);\n      const name = isAnObject\n        ? nameOrOptions.name\n          ? nameOrOptions.name\n          : nameOrOptions.id\n        : nameOrOptions;\n      const valueState = getIn(state.values, name);\n      const touchedState = getIn(state.touched, name);\n\n      const field: FieldInputProps<any> = {\n        name,\n        value: valueState,\n        onChange: handleChange,\n        onBlur: handleBlur,\n      };\n      if (isAnObject) {\n        const {\n          type,\n          value: valueProp, // value is special for checkboxes\n          as: is,\n          multiple,\n          parse = /number|range/.test(type) ? numberParseFn : defaultParseFn,\n          format = defaultFormatFn,\n          formatOnBlur = false,\n        } = nameOrOptions;\n\n        if (type === 'checkbox') {\n          if (valueProp === undefined) {\n            field.checked = !!valueState;\n          } else {\n            field.checked = !!(\n              Array.isArray(valueState) && ~valueState.indexOf(valueProp)\n            );\n            field.value = valueProp;\n          }\n        } else if (type === 'radio') {\n          field.checked = valueState === valueProp;\n          field.value = valueProp;\n        } else if (is === 'select' && multiple) {\n          field.value = field.value || [];\n          field.multiple = true;\n        }\n\n        if (type !== 'radio' && type !== 'checkbox' && !!format) {\n          if (formatOnBlur === true) {\n            if (touchedState === true) {\n              field.value = format(field.value);\n            }\n          } else {\n            field.value = format(field.value);\n          }\n        }\n\n        // We incorporate the fact that we know the `name` prop by scoping `onChange`.\n        // In addition, to support `parse` fn, we can't just re-use the OG `handleChange`, but\n        // instead re-implement it's guts.\n        if (type !== 'radio' && type !== 'checkbox') {\n          field.onChange = (eventOrValue: React.ChangeEvent<any> | any) => {\n            if (isInputEvent(eventOrValue)) {\n              if (eventOrValue.persist) {\n                eventOrValue.persist();\n              }\n              setFieldValue(name, parse(getValueFromEvent(eventOrValue, name)));\n            } else {\n              setFieldValue(name, parse(eventOrValue));\n            }\n          };\n        }\n      }\n      return field;\n    },\n    [\n      getValueFromEvent,\n      handleBlur,\n      handleChange,\n      setFieldValue,\n      state.touched,\n      state.values,\n    ]\n  );\n\n  const dirty = React.useMemo(\n    () => !isEqual(initialValues.current, state.values),\n    [initialValues.current, state.values]\n  );\n\n  const isValid = React.useMemo(\n    () =>\n      typeof isInitialValid !== 'undefined'\n        ? dirty\n          ? state.errors && Object.keys(state.errors).length === 0\n          : isInitialValid !== false && isFunction(isInitialValid)\n          ? (isInitialValid as (props: FormikConfig<Values>) => boolean)(props)\n          : (isInitialValid as boolean)\n        : state.errors && Object.keys(state.errors).length === 0,\n    [isInitialValid, dirty, state.errors, props]\n  );\n\n  const ctx = {\n    ...state,\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setFormikState,\n    setFieldTouched,\n    setFieldValue,\n    setFieldError,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    isValid,\n    dirty,\n    unregisterField,\n    registerField,\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    validateOnBlur,\n    validateOnChange,\n    validateOnMount,\n  };\n\n  return ctx;\n}\n\nexport function Formik<\n  Values extends FormikValues = FormikValues,\n  ExtraProps = {}\n>(props: FormikConfig<Values> & ExtraProps) {\n  const formikbag = useFormik<Values>(props);\n  const { component, children, render, innerRef } = props;\n\n  // This allows folks to pass a ref to <Formik />\n  React.useImperativeHandle(innerRef, () => formikbag);\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !props.render,\n        `<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>`\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n  return (\n    <FormikProvider value={formikbag}>\n      {component\n        ? React.createElement(component as any, formikbag)\n        : render\n        ? render(formikbag)\n        : children // children come last, always called\n        ? isFunction(children)\n          ? (children as (bag: FormikProps<Values>) => React.ReactNode)(\n              formikbag as FormikProps<Values>\n            )\n          : !isEmptyChildren(children)\n          ? React.Children.only(children)\n          : null\n        : null}\n    </FormikProvider>\n  );\n}\n\nfunction warnAboutMissingIdentifier({\n  htmlContent,\n  documentationAnchorLink,\n  handlerName,\n}: {\n  htmlContent: string;\n  documentationAnchorLink: string;\n  handlerName: string;\n}) {\n  console.warn(\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\n    ${htmlContent}\n    Formik cannot determine which value to update. For more info see https://github.com/jaredpalmer/formik#${documentationAnchorLink}\n  `\n  );\n}\n\n/**\n * Transform Yup ValidationError to a more usable object\n */\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\n  let errors: FormikErrors<Values> = {};\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n    for (let err of yupError.inner) {\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate a yup schema.\n */\nexport function validateYupSchema<T extends FormikValues>(\n  values: T,\n  schema: any,\n  sync: boolean = false,\n  context: any = {}\n): Promise<Partial<T>> {\n  const validateData: FormikValues = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\n    abortEarly: false,\n    context: context,\n  });\n}\n\n/**\n * Recursively prepare values.\n */\nexport function prepareDataForValidation<T extends FormikValues>(\n  values: T\n): FormikValues {\n  let data: FormikValues = Array.isArray(values) ? [] : {};\n  for (let k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      const key = String(k);\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map((value: any) => {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n  return data;\n}\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/KyleAMathews/deepmerge#combine-array\n */\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\n  const destination = target.slice();\n\n  source.forEach(function merge(e: any, i: number) {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\n        : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? React.useLayoutEffect\n    : React.useEffect;\n\nfunction useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  const ref: any = React.useRef(fn);\n\n  // we copy a ref to the callback scoped to the current state/props on each render\n  useIsomorphicLayoutEffect(() => {\n    ref.current = fn;\n  });\n\n  return React.useCallback(\n    (...args: any[]) => ref.current.apply(void 0, args),\n    []\n  ) as T;\n}\n","import * as React from 'react';\nimport invariant from 'tiny-warning';\nimport {\n  FieldInputProps,\n  FieldMetaProps,\n  FieldValidator,\n  FormikContextType,\n} from './types';\nimport { useFormikContextSelector } from './FormikContext';\nimport {\n  defaultFormatFn,\n  defaultParseFn,\n  getIn,\n  getValueFromEvent,\n  isInputEvent,\n  isObject,\n  numberParseFn,\n} from './utils';\nimport { FieldHelperProps } from './types';\n\nexport type UseFieldProps<V = any> = {\n  /**\n   * Component to render. Can either be a string e.g. 'select', 'input', or 'textarea', or a component.\n   */\n  as?:\n    | string\n    | React.ComponentType<FieldInputProps<V>>\n    | React.ComponentType\n    | React.ForwardRefExoticComponent<any>;\n  /**\n   * Validate a single field value independently\n   */\n  validate?: FieldValidator;\n\n  /**\n   * Function to parse raw input value before setting it to state\n   */\n  parse?: (value: unknown, name: string) => V;\n\n  /**\n   * Function to transform value passed to input\n   */\n  format?: (value: V, name: string) => any;\n\n  /**\n   * Wait until blur event before formatting input value?\n   * @default false\n   */\n  formatOnBlur?: boolean;\n\n  /**\n   * HTML multiple attribute\n   */\n  multiple?: boolean;\n  /**\n   * Field name\n   */\n  name: string;\n\n  /** HTML input type */\n  type?: string;\n\n  /** Field value */\n  value?: any;\n};\n\n/**\n * Returns Formik field value updater function\n * @public\n */\nexport function useSetFieldValue<\n  Values\n>(): FormikContextType<Values>['setFieldValue'] {\n  return useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['setFieldValue']\n  >(ctx => ctx.setFieldValue);\n}\n\n/**\n * Returns Formik field touched updater function\n * @public\n */\nexport function useSetFieldTouched<\n  Values\n>(): FormikContextType<Values>['setFieldTouched'] {\n  return useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['setFieldTouched']\n  >(ctx => ctx.setFieldTouched);\n}\n\nexport function useField<FieldValues = any>(\n  nameOrOptions: string | UseFieldProps<FieldValues>\n): [\n  FieldInputProps<FieldValues>,\n  FieldMetaProps<FieldValues>,\n  FieldHelperProps<FieldValues>\n] {\n  const isAnObject = isObject(nameOrOptions);\n  // Normalize propsOrFieldName to FieldConfig<Value>\n  const props: UseFieldProps<FieldValues> = isAnObject\n    ? (nameOrOptions as UseFieldProps<FieldValues>)\n    : ({ name: nameOrOptions as string } as UseFieldProps<FieldValues>);\n\n  const { name: fieldName, validate: validateFn } = props;\n\n  const registerField = useFormikContextSelector(c => c.registerField);\n\n  const unregisterField = useFormikContextSelector(c => c.unregisterField);\n\n  React.useEffect(() => {\n    invariant(\n      fieldName,\n      'Invalid field name. Either pass `useField` a string or an object containing a `name` key.'\n    );\n\n    invariant(\n      registerField,\n      'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component'\n    );\n\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn,\n      });\n    }\n    return () => {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  const meta = useFieldMeta(fieldName);\n  const { value: valueState, touched: touchedState } = meta;\n  const setFieldValue = useSetFieldValue();\n  const setFieldTouched = useSetFieldTouched();\n  const getFieldHelpers = useFormikContextSelector(ctx => ctx.getFieldHelpers);\n\n  const field: FieldInputProps<any> = {\n    name: fieldName,\n    value: valueState,\n    // We incorporate the fact that we know the `name` prop by scoping `onChange` and `onBlur`.\n    // In addition, to support `parse` fn, we can't just re-use the OG `handleChange` and `handleBlur`, but\n    // instead re-implement it's guts.\n    onChange: (eventOrValue: React.ChangeEvent<any> | any) => {\n      if (isInputEvent(eventOrValue)) {\n        if (eventOrValue.persist) {\n          eventOrValue.persist();\n        }\n        setFieldValue(\n          fieldName,\n          parse(getValueFromEvent(eventOrValue, valueState), fieldName)\n        );\n      } else {\n        setFieldValue(fieldName, parse(eventOrValue, fieldName));\n      }\n    },\n    onBlur: (eventOrValue: React.SyntheticEvent<any> | boolean) => {\n      if (isInputEvent(eventOrValue)) {\n        if (eventOrValue.persist) {\n          eventOrValue.persist();\n        }\n        setFieldTouched(fieldName, true);\n      } else {\n        setFieldValue(fieldName, eventOrValue);\n      }\n    },\n  };\n\n  const {\n    type,\n    value: valueProp, // value is special for checkboxes\n    as: is,\n    multiple,\n    parse = /number|range/.test(type ?? '') ? numberParseFn : defaultParseFn,\n    format = defaultFormatFn,\n    formatOnBlur = false,\n  } = nameOrOptions as UseFieldProps<FieldValues>; // @todo why is this type failing?\n\n  if (type === 'checkbox') {\n    if (valueProp === undefined) {\n      field.checked = !!valueState;\n    } else {\n      field.checked = !!(\n        Array.isArray(valueState) && ~valueState.indexOf(valueProp)\n      );\n      field.value = valueProp;\n    }\n  } else if (type === 'radio') {\n    field.checked = valueState === valueProp;\n    field.value = valueProp;\n  } else if (is === 'select' && multiple) {\n    field.value = field.value || [];\n    field.multiple = true;\n  }\n\n  if (type !== 'radio' && type !== 'checkbox' && !!format) {\n    if (formatOnBlur === true) {\n      if (touchedState === true) {\n        field.value = format(field.value, fieldName);\n      }\n    } else {\n      field.value = format(field.value, fieldName);\n    }\n  }\n\n  return [field, meta, getFieldHelpers(fieldName)];\n}\n\n/**\n * Returns the value and an updater function of a given field\n * @param name The name of the field\n * @public\n */\nexport function useFieldValue<Values>(\n  name: string\n): [any | undefined, (error: any) => void] {\n  const state = useFormikContextSelector<Values>(ctx =>\n    getIn(ctx.values, name)\n  );\n\n  const set = useSetFieldValue<Values>();\n\n  const setState = React.useCallback(\n    (value: any, shouldValidate?: boolean) => {\n      set(name, value, shouldValidate);\n    },\n    [name]\n  );\n\n  return [state, setState];\n}\n\n/**\n * Returns error message state and an updater function of a given field\n * @param name The name of the field\n * @public\n */\nexport function useFieldError<Values>(\n  name: string\n): [any | undefined, (error: any) => void] {\n  const state = useFormikContextSelector<Values, any | undefined>(ctx =>\n    getIn(ctx.errors, name)\n  );\n\n  const set = useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['setFieldError']\n  >(ctx => ctx.setFieldError);\n\n  const setState = React.useCallback(\n    (error: any) => {\n      set(name, error);\n    },\n    [name]\n  );\n\n  return [state, setState];\n}\n\n/**\n * Returns touched state and updater function of a given field\n * @param name The name of the field\n * @public\n */\nexport function useFieldTouched<Values>(\n  name: string\n): [boolean, (error: any) => void] {\n  const state = useFormikContextSelector<Values, boolean>(ctx =>\n    Boolean(getIn(ctx.touched, name))\n  );\n\n  const set = useSetFieldTouched<Values>();\n\n  const setState = React.useCallback(\n    (isTouched?: boolean, shouldValidate?: boolean) => {\n      set(name, isTouched, shouldValidate);\n    },\n    [name]\n  );\n\n  return [state, setState];\n}\n\n/**\n * Returns initial value of a given field\n * @param name The name of the field\n * @public\n */\nexport function useFieldInitialValue<Values>(name: string) {\n  return useFormikContextSelector<Values, any | undefined>(ctx =>\n    getIn(ctx.initialValues, name)\n  );\n}\n\n/**\n * Returns initial touched state of a given field\n * @param name The name of the field\n * @public\n */\nexport function useFieldInitialTouched<Values>(name: string) {\n  return useFormikContextSelector<Values>(ctx =>\n    Boolean(getIn(ctx.initialTouched, name))\n  );\n}\n\n/**\n * Returns initial error message of a given field\n * @param name The name of the field\n * @public\n */\nexport function useFieldInitialError<Values>(name: string) {\n  return useFormikContextSelector<Values>(ctx =>\n    getIn(ctx.initialErrors, name)\n  );\n}\n\n/**\n * Returns initial Formik values\n * @public\n */\nexport function useInitialValues<Values>() {\n  return useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['initialValues']\n  >(ctx => ctx.initialValues);\n}\n\n/**\n * Returns initial Formik touched\n * @public\n */\nexport function useInitialTouched<Values>() {\n  return useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['initialTouched']\n  >(ctx => ctx.initialTouched);\n}\n\n/**\n * Returns initial Formik errors\n * @public\n */\nexport function useInitialErrors<Values>() {\n  return useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['initialErrors']\n  >(ctx => ctx.initialErrors);\n}\n\n/**\n * Returns initial Formik status\n * @public\n */\nexport function useInitialStatus<Values>() {\n  return useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['initialStatus']\n  >(ctx => ctx.initialStatus);\n}\n\n/**\n * Returns Formik errors and updater function\n * @public\n */\nexport function useErrors<Values>() {\n  const state = useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['errors']\n  >(ctx => ctx.errors);\n  const update = useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['setErrors']\n  >(ctx => ctx.setErrors);\n  return [state, update];\n}\n\n/**\n * Returns Formik values and updater function\n * @public\n */\nexport function useValues<Values>() {\n  const state = useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['values']\n  >(ctx => ctx.values);\n  const update = useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['setValues']\n  >(ctx => ctx.setValues);\n  return [state, update];\n}\n\n/**\n * Returns Formik touched state and updater function\n * @public\n */\nexport function useTouched<Values>() {\n  const state = useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['touched']\n  >(ctx => ctx.touched);\n  const update = useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['setTouched']\n  >(ctx => ctx.setTouched);\n  return [state, update];\n}\n\n/**\n * Returns Formik touched updater function\n * @public\n */\nexport function useSetTouched<Values>() {\n  const update = useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['setTouched']\n  >(ctx => ctx.setTouched);\n  return update;\n}\n\n/**\n * Returns Formik values updater function\n * @public\n */\nexport function useSetValues<Values>() {\n  const update = useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['setValues']\n  >(ctx => ctx.setValues);\n  return update;\n}\n\n/**\n * Returns Formik errors updater function\n * @public\n */\nexport function useSetErrors<Values>() {\n  const update = useFormikContextSelector<\n    Values,\n    FormikContextType<Values>['setErrors']\n  >(ctx => ctx.setErrors);\n  return update;\n}\n\n/**\n * Returns Formik status state and updater function\n * @public\n */\nexport function useStatus<T>() {\n  const state: T = useFormikContextSelector<\n    unknown,\n    FormikContextType<unknown>['status']\n  >(ctx => ctx.status);\n  const update = useFormikContextSelector<\n    unknown,\n    FormikContextType<unknown>['setStatus']\n  >(ctx => ctx.setStatus);\n  return [state, update];\n}\n\n/**\n * Returns Formik status updater function\n * @public\n */\nexport function useSetStatus() {\n  return useFormikContextSelector<\n    unknown,\n    FormikContextType<unknown>['setStatus']\n  >(ctx => ctx.setStatus);\n}\n\n/**\n * Returns a function to imperatively submit the form\n * @public\n */\nexport function useSubmitForm() {\n  return useFormikContextSelector<\n    unknown,\n    FormikContextType<unknown>['submitForm']\n  >(ctx => ctx.submitForm);\n}\n\n/**\n * Returns whether the form submission is currently being attempted\n * @public\n */\nexport function useIsSubmitting() {\n  return useFormikContextSelector<\n    unknown,\n    FormikContextType<unknown>['isSubmitting']\n  >(ctx => ctx.isSubmitting);\n}\n\n/**\n * Returns function to reset the form\n * @public\n */\nexport function useResetForm() {\n  return useFormikContextSelector<\n    unknown,\n    FormikContextType<unknown>['resetForm']\n  >(ctx => ctx.resetForm);\n}\n\n/**\n *\n * Returns whether the form submission is currently being attempted\n * @public\n */\nexport function useIsValid() {\n  return useFormikContextSelector<\n    unknown,\n    FormikContextType<unknown>['isValid']\n  >(ctx => ctx.isValid);\n}\n\n/**\n * Returns whether the form is dirty\n * @public\n */\nexport function useIsDirty() {\n  return useFormikContextSelector<unknown, FormikContextType<unknown>['dirty']>(\n    ctx => ctx.dirty\n  );\n}\n\n/**\n * Returns a function to imperatively validate the entire form\n * @public\n */\nexport function useValidateForm() {\n  return useFormikContextSelector<\n    unknown,\n    FormikContextType<unknown>['validateForm']\n  >(ctx => ctx.validateForm);\n}\n\n/**\n * Returns a function to imperatively validate a field\n * @public\n */\nexport function useValidateField(fieldName?: string) {\n  const validateField = useFormikContextSelector<\n    unknown,\n    FormikContextType<unknown>['validateField']\n  >(ctx => ctx.validateField);\n  return React.useCallback(() => {\n    return fieldName ? validateField(fieldName) : validateField;\n  }, [fieldName]);\n}\n\nfunction useFieldMeta<Values>(name: string) {\n  const [value] = useFieldValue<Values>(name);\n  const [touched] = useFieldTouched<Values>(name);\n  const [error] = useFieldError<Values>(name);\n  const initialValue = useFieldInitialValue<Values>(name);\n  const initialTouched = useFieldInitialTouched<Values>(name);\n  const initialError = useFieldInitialError<Values>(name);\n  return {\n    value,\n    touched,\n    error,\n    initialValue,\n    initialTouched,\n    initialError,\n  };\n}\n","import * as React from 'react';\nimport invariant from 'tiny-warning';\nimport { useFormikContext } from './FormikContext';\nimport {\n  FieldInputProps,\n  FieldMetaProps,\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  SharedFieldProps,\n} from './types';\nimport { useField, UseFieldProps } from './hooks';\nimport { isEmptyChildren, isFunction } from './utils';\n\nexport interface FieldProps<V = any, FormValues = any> {\n  field: FieldInputProps<V>;\n  form: FormikProps<FormValues>; // if ppl want to restrict this for a given form, let them.\n  meta: FieldMetaProps<V>;\n}\n\nexport type FieldConfig<FieldValue = any, FormValues = any> = UseFieldProps<\n  FieldValue\n> &\n  SharedFieldProps<FieldProps<FieldValue, FormValues>>;\n\nexport function Field<FieldValue = any, FormValues = any>({\n  render,\n  children,\n  as: is, // `as` is reserved in typescript lol\n  component,\n  ...props\n}: GenericFieldHTMLAttributes & FieldConfig<FieldValue, FormValues>): any {\n  React.useEffect(() => {\n    invariant(\n      !render,\n      `<Field render> has been deprecated. Please use a child callback function instead: <Field name={${name}}>{props => ...}</Field> instead.`\n    );\n    invariant(\n      !(component && render),\n      'You should not use <Field component> and <Field render> in the same <Field> component; <Field component> will be ignored'\n    );\n\n    invariant(\n      !(is && children && isFunction(children)),\n      'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.'\n    );\n\n    invariant(\n      !(component && children && isFunction(children)),\n      'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.'\n    );\n\n    invariant(\n      !(render && children && !isEmptyChildren(children)),\n      'You should not use <Field render> and <Field children> in the same <Field> component; <FastField children> will be ignored'\n    );\n    // eslint-disable-next-line\n  }, []);\n\n  const [field, meta] = useField<FieldValue>(props);\n  const {\n    validate: _validate,\n    validationSchema: _validationSchema,\n    ...formik\n  } = useFormikContext<FormValues>();\n  const legacyBag = { field, form: formik };\n\n  if (render) {\n    // @ts-ignore @todo types\n    return isFunction(render) ? render({ ...legacyBag, meta }) : null;\n  }\n\n  if (isFunction(children)) {\n    // @ts-ignore @todo types\n    return children({ ...legacyBag, meta });\n  }\n\n  // default to input here so we can check for both `as` and `children` above\n  const asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    const { innerRef, parse, format, formatOnBlur, ...rest } = props;\n    return React.createElement(\n      asElement,\n      { ref: innerRef, ...field, ...rest },\n      children\n    );\n  }\n  const { parse, format, formatOnBlur, ...rest } = props;\n  return React.createElement(\n    asElement as React.ComponentType<FieldInputProps<FieldValue>>,\n    { ...field, ...rest },\n    children\n  );\n}\n","import * as React from 'react';\nimport { useContextSelector } from 'use-context-selector';\nimport { FormikContext } from './FormikContext';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\ntype FormProps = React.ComponentPropsWithoutRef<'form'>;\n\n// @todo tests\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(function Form(\n  props: FormikFormProps,\n  ref\n) {\n  // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n  // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n  const { action, ...rest } = props;\n  const _action = action || '#';\n  const handleReset = useContextSelector(FormikContext, ctx => ctx.handleReset);\n  const handleSubmit = useContextSelector(\n    FormikContext,\n    ctx => ctx.handleSubmit\n  );\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      ref={ref}\n      onReset={handleReset}\n      action={_action}\n      {...rest}\n    />\n  );\n});\n\nForm.displayName = 'Form';\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { Formik } from './Formik';\nimport {\n  FormikHelpers,\n  FormikProps,\n  FormikSharedConfig,\n  FormikValues,\n  FormikTouched,\n  FormikErrors,\n} from './types';\nimport { isFunction } from './utils';\n\n/**\n * State, handlers, and helpers injected as props into the wrapped form component.\n * Used with withFormik()\n *\n * @deprecated  Use `OuterProps & FormikProps<Values>` instead.\n */\nexport type InjectedFormikProps<Props, Values> = Props & FormikProps<Values>;\n\n/**\n * Formik helpers + { props }\n */\nexport type FormikBag<P, V> = { props: P } & FormikHelpers<V>;\n\n/**\n * withFormik() configuration options. Backwards compatible.\n */\nexport interface WithFormikConfig<\n  Props,\n  Values extends FormikValues = FormikValues,\n  DeprecatedPayload = Values\n> extends FormikSharedConfig<Props> {\n  /**\n   * Set the display name of the component. Useful for React DevTools.\n   */\n  displayName?: string;\n\n  /**\n   * Submission handler\n   */\n  handleSubmit: (values: Values, formikBag: FormikBag<Props, Values>) => void;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToValues?: (props: Props) => Values;\n\n  /**\n   * Map props to the form status\n   */\n  mapPropsToStatus?: (props: Props) => any;\n\n  /**\n   * Map props to the form touched state\n   */\n  mapPropsToTouched?: (props: Props) => FormikTouched<Values>;\n\n  /**\n   * Map props to the form errors state\n   */\n  mapPropsToErrors?: (props: Props) => FormikErrors<Values>;\n\n  /**\n   * @deprecated in 0.9.0 (but needed to break TS types)\n   */\n  mapValuesToPayload?: (values: Values) => DeprecatedPayload;\n\n  /**\n   * A Yup Schema or a function that returns a Yup schema\n   */\n  validationSchema?: any | ((props: Props) => any);\n\n  /**\n   * Validation function. Must return an error object or promise that\n   * throws an error object where that object keys map to corresponding value.\n   */\n  validate?: (values: Values, props: Props) => void | object | Promise<any>;\n}\n\nexport type CompositeComponent<P> =\n  | React.ComponentClass<P>\n  | React.StatelessComponent<P>;\n\nexport interface ComponentDecorator<TOwnProps, TMergedProps> {\n  (component: CompositeComponent<TMergedProps>): React.ComponentType<TOwnProps>;\n}\n\nexport interface InferableComponentDecorator<TOwnProps> {\n  <T extends CompositeComponent<TOwnProps>>(component: T): T;\n}\n\n/**\n * A public higher-order component to access the imperative API\n */\nexport function withFormik<\n  OuterProps extends object,\n  Values extends FormikValues,\n  Payload = Values\n>({\n  mapPropsToValues = (vanillaProps: OuterProps): Values => {\n    let val: Values = {} as Values;\n    for (let k in vanillaProps) {\n      if (\n        vanillaProps.hasOwnProperty(k) &&\n        typeof vanillaProps[k] !== 'function'\n      ) {\n        // @todo TypeScript fix\n        (val as any)[k] = vanillaProps[k];\n      }\n    }\n    return val as Values;\n  },\n  ...config\n}: WithFormikConfig<OuterProps, Values, Payload>): ComponentDecorator<\n  OuterProps,\n  OuterProps & FormikProps<Values>\n> {\n  return function createFormik(\n    Component: CompositeComponent<OuterProps & FormikProps<Values>>\n  ): React.ComponentClass<OuterProps> {\n    const componentDisplayName =\n      Component.displayName ||\n      Component.name ||\n      (Component.constructor && Component.constructor.name) ||\n      'Component';\n    /**\n     * We need to use closures here for to provide the wrapped component's props to\n     * the respective withFormik config methods.\n     */\n    class C extends React.Component<OuterProps, {}> {\n      static displayName = `WithFormik(${componentDisplayName})`;\n\n      validate = (values: Values): void | object | Promise<any> => {\n        return config.validate!(values, this.props);\n      };\n\n      validationSchema = () => {\n        return isFunction(config.validationSchema)\n          ? config.validationSchema!(this.props)\n          : config.validationSchema;\n      };\n\n      handleSubmit = (values: Values, actions: FormikHelpers<Values>) => {\n        return config.handleSubmit(values, {\n          ...actions,\n          props: this.props,\n        });\n      };\n\n      /**\n       * Just avoiding a render callback for perf here\n       */\n      renderFormComponent = (formikProps: FormikProps<Values>) => {\n        return <Component {...this.props} {...formikProps} />;\n      };\n\n      render() {\n        const { children, ...props } = this.props as any;\n        return (\n          <Formik\n            {...props}\n            {...config}\n            validate={config.validate && this.validate}\n            validationSchema={config.validationSchema && this.validationSchema}\n            initialValues={mapPropsToValues(this.props)}\n            initialStatus={\n              config.mapPropsToStatus && config.mapPropsToStatus(this.props)\n            }\n            initialErrors={\n              config.mapPropsToErrors && config.mapPropsToErrors(this.props)\n            }\n            initialTouched={\n              config.mapPropsToTouched && config.mapPropsToTouched(this.props)\n            }\n            onSubmit={this.handleSubmit as any}\n            children={this.renderFormComponent}\n          />\n        );\n      }\n    }\n\n    return hoistNonReactStatics(\n      C,\n      Component as React.ComponentClass<OuterProps & FormikProps<Values>> // cast type to ComponentClass (even if SFC)\n    ) as React.ComponentClass<OuterProps>;\n  };\n}\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport invariant from 'tiny-warning';\nimport { FormikConsumer } from './FormikContext';\nimport { FormikContextType } from './types';\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContextType<Values> }>\n) {\n  const C: React.FC<OuterProps> = (props: OuterProps) => (\n    <FormikConsumer\n      children={(formik: FormikContextType<Values>) => {\n        invariant(\n          !!formik,\n          `Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: ${Comp.name}`\n        );\n        return <Comp {...props} formik={formik} />;\n      }}\n    />\n  );\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.FC<OuterProps> & {\n    WrappedComponent: React.ReactNode;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics(\n    C,\n    Comp as React.ComponentClass<\n      OuterProps & { formik: FormikContextType<Values> }\n    > // cast type to ComponentClass (even if SFC)\n  ) as React.ComponentType<OuterProps>;\n}\n","import * as React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { connect } from './connect';\nimport {\n  FormikContextType,\n  FormikState,\n  SharedRenderProps,\n  FormikProps,\n} from './types';\nimport {\n  getIn,\n  isEmptyChildren,\n  isFunction,\n  setIn,\n  isEmptyArray,\n} from './utils';\nimport isEqual from 'react-fast-compare';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers {\n  /** Imperatively add a value to the end of an array */\n  push: (obj: any) => void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush: (obj: any) => () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert: (index: number, value: any) => void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert: (index: number, value: any) => () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace: (index: number, value: any) => void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace: (index: number, value: any) => () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift: (value: any) => number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift: (value: any) => () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<T>(index: number): T | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<T>(): T | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = (array: any[], from: number, to: number) => {\n  const copy = copyArrayLike(array);\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = (\n  arrayLike: ArrayLike<any>,\n  indexA: number,\n  indexB: number\n) => {\n  const copy = copyArrayLike(arrayLike);\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nconst copyArrayLike = (arrayLike: ArrayLike<any>) => {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [...arrayLike];\n  } else {\n    const maxIndex = Object.keys(arrayLike)\n      .map(key => parseInt(key))\n      .reduce((max, el) => (el > max ? el : max), 0);\n    return Array.from({ ...arrayLike, length: maxIndex + 1 });\n  }\n};\n\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContextType<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContextType<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  componentDidUpdate(\n    prevProps: FieldArrayConfig & { formik: FormikContextType<Values> }\n  ) {\n    if (\n      this.props.validateOnChange &&\n      this.props.formik.validateOnChange &&\n      !isEqual(\n        getIn(prevProps.formik.values, prevProps.name),\n        getIn(this.props.formik.values, this.props.name)\n      )\n    ) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n\n      formik: { setFormikState },\n    } = this.props;\n    setFormikState((prevState: FormikState<any>) => {\n      let updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n      let updateTouched =\n        typeof alterTouched === 'function' ? alterTouched : fn;\n\n      // values fn should be executed before updateErrors and updateTouched,\n      // otherwise it causes an error with unshift.\n      let values = setIn(\n        prevState.values,\n        name,\n        fn(getIn(prevState.values, name))\n      );\n\n      let fieldError = alterErrors\n        ? updateErrors(getIn(prevState.errors, name))\n        : undefined;\n      let fieldTouched = alterTouched\n        ? updateTouched(getIn(prevState.touched, name))\n        : undefined;\n\n      if (isEmptyArray(fieldError)) {\n        fieldError = undefined;\n      }\n      if (isEmptyArray(fieldTouched)) {\n        fieldTouched = undefined;\n      }\n\n      return {\n        ...prevState,\n        values,\n        errors: alterErrors\n          ? setIn(prevState.errors, name, fieldError)\n          : prevState.errors,\n        touched: alterTouched\n          ? setIn(prevState.touched, name, fieldTouched)\n          : prevState.touched,\n      };\n    });\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (arrayLike: ArrayLike<any>) => [\n        ...copyArrayLike(arrayLike),\n        cloneDeep(value),\n      ],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      }\n    );\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? copyArrayLike(array) : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        return copy;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array;\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n      ? (render as any)(props)\n      : children // children come last, always called\n      ? typeof children === 'function'\n        ? (children as any)(props)\n        : !isEmptyChildren(children)\n        ? React.Children.only(children)\n        : null\n      : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\nimport { useFieldError, useFieldTouched } from './hooks';\nimport { isFunction } from './utils';\n\nexport interface ErrorMessageProps {\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: (errorMessage: string) => React.ReactNode;\n  render?: (errorMessage: string) => React.ReactNode;\n}\n\nexport function ErrorMessage({\n  component,\n  render,\n  children,\n  name,\n  ...rest\n}: ErrorMessageProps): JSX.Element | null {\n  const [touch] = useFieldTouched(name);\n  const [error] = useFieldError(name);\n  return !!touch && !!error\n    ? render\n      ? isFunction(render)\n        ? render(error)\n        : null\n      : children\n      ? isFunction(children)\n        ? children(error)\n        : null\n      : component\n      ? React.createElement(component, rest as any, error)\n      : error\n    : null;\n}\n","import * as React from 'react';\nimport invariant from 'tiny-warning';\nimport {\n  FieldInputProps,\n  FieldMetaProps,\n  GenericFieldHTMLAttributes,\n  SharedFieldProps,\n} from './types';\nimport { useField, UseFieldProps } from './hooks';\nimport { isEmptyChildren, isFunction } from './utils';\n\nexport type FastFieldProps<FieldValue = any> = {\n  field: FieldInputProps<FieldValue>;\n  meta: FieldMetaProps<FieldValue>;\n};\n\nexport type FastFieldConfig<V = any> = UseFieldProps<V> &\n  SharedFieldProps<FastFieldProps<V>> & {\n    /**\n     * Override FastField's default shouldComponentUpdate\n     * @deprecated\n     */\n    shouldUpdate?: (nextProps: any, props: {}) => boolean;\n  };\n\nexport function FastField<V = any>({\n  render,\n  children,\n  as: is, // `as` is reserved in typescript lol\n  component,\n  shouldUpdate,\n  ...props\n}: GenericFieldHTMLAttributes & FastFieldConfig<V>): any {\n  React.useEffect(() => {\n    invariant(\n      !render,\n      `<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={${name}}>{props => ...}</FastField> instead.`\n    );\n    invariant(\n      !(component && render),\n      'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored'\n    );\n\n    invariant(\n      !(is && children && isFunction(children)),\n      'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.'\n    );\n\n    invariant(\n      !(component && children && isFunction(children)),\n      'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.'\n    );\n\n    invariant(\n      !(render && children && !isEmptyChildren(children)),\n      'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored'\n    );\n    invariant(\n      !shouldUpdate,\n      `<FastField shouldUpdate> has been deprecated. Please create a custom component with useField and React.memo() instead.`\n    );\n    // eslint-disable-next-line\n  }, []);\n\n  const [field, meta] = useField<V>(props);\n\n  if (render) {\n    // @ts-ignore @todo types\n    return isFunction(render) ? render({ field, meta }) : null;\n  }\n\n  if (isFunction(children)) {\n    // @ts-ignore @todo types\n    return children({ field, meta });\n  }\n\n  const { innerRef, parse, format, formatOnBlur, validate, ...rest } = props;\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      return React.createElement(\n        component,\n        { ref: innerRef, ...field, ...rest },\n        children\n      );\n    }\n    return React.createElement(component, { field, meta, ...rest }, children);\n  }\n\n  // default to input here so we can check for both `as` and `children` above\n  const asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    return React.createElement(\n      asElement,\n      { ref: innerRef, ...field, ...rest },\n      children\n    );\n  }\n  return React.createElement(\n    asElement as React.FunctionComponent<FieldInputProps<V>>,\n    { ...field, ...rest },\n    children\n  );\n}\n"],"names":["isEmptyArray","value","Array","isArray","length","isFunction","obj","isObject","isInteger","String","Math","floor","Number","isString","Object","prototype","toString","call","isNaN","isEmptyChildren","children","React","count","isPromise","then","isInputEvent","target","isReactNative","window","navigator","product","getActiveElement","doc","document","undefined","activeElement","body","e","getIn","key","def","p","path","toPath","setIn","res","clone","resVal","i","pathArray","currentPath","currentObj","slice","nextPath","setNestedObjectValues","object","visited","response","WeakMap","keys","k","val","get","set","getSelectedValues","options","result","index","option","selected","push","getValueForCheckbox","currentValue","checked","valueProp","Boolean","currentArrayOfValues","isValueInArray","indexOf","concat","defaultParseFn","_name","numberParseFn","parsed","parseFloat","defaultFormatFn","getValueFromEvent","event","valueState","nativeEvent","text","currentTarget","type","multiple","test","FormikContext","createContext","FormikProvider","Provider","useFormikContext","useContext","FormikConsumer","formik","invariant","useFormikContextSelector","selector","useContextSelector","formikReducer","state","msg","values","payload","touched","isEqual","errors","status","isSubmitting","isValidating","field","submitCount","emptyErrors","emptyTouched","useFormik","validateOnChange","validateOnBlur","validateOnMount","isInitialValid","enableReinitialize","onSubmit","rest","props","initialValues","initialErrors","initialTouched","initialStatus","isMounted","fieldRegistry","current","dispatch","runValidateHandler","Promise","resolve","reject","maybePromisedErrors","validate","actualException","process","env","NODE_ENV","console","warn","runValidationSchema","validationSchema","schema","promise","validateAt","validateYupSchema","err","name","yupToFormErrors","runSingleFieldLevelValidation","runFieldLevelValidations","fieldKeysWithValidation","filter","f","fieldValidations","map","all","fieldErrorsList","reduce","prev","curr","runAllValidations","fieldErrors","schemaErrors","validateErrors","combinedErrors","deepmerge","arrayMerge","validateFormWithHighPriority","useEventCallback","resetForm","nextState","dispatchFn","onReset","maybePromisedOnReset","imperativeMethods","validateField","maybePromise","x","error","registerField","unregisterField","setTouched","shouldValidate","willValidate","setErrors","setValues","resolvedValues","setFieldError","setFieldValue","executeChange","eventOrTextValue","maybePath","persist","id","outerHTML","warnAboutMissingIdentifier","htmlContent","documentationAnchorLink","handlerName","handleChange","eventOrPath","setFieldTouched","executeBlur","handleBlur","eventOrString","setFormikState","stateOrCb","setStatus","setSubmitting","submitForm","isInstanceOfError","Error","isActuallyValid","promiseOrUndefined","executeSubmit","_errors","handleSubmit","preventDefault","stopPropagation","HTMLButtonElement","attributes","getNamedItem","reason","validateForm","handleReset","getFieldMeta","initialValue","initialError","getFieldHelpers","setValue","setError","fieldName","getFieldProps","nameOrOptions","isAnObject","touchedState","onChange","onBlur","is","as","parse","format","formatOnBlur","eventOrValue","dirty","isValid","ctx","Formik","formikbag","component","render","innerRef","only","yupError","inner","message","sync","context","validateData","prepareDataForValidation","abortEarly","data","hasOwnProperty","isPlainObject","source","destination","forEach","merge","cloneRequested","shouldClone","isMergeableObject","useIsomorphicLayoutEffect","createElement","fn","ref","args","apply","useSetFieldValue","useSetFieldTouched","useField","validateFn","c","meta","useFieldMeta","useFieldValue","setState","useFieldError","useFieldTouched","isTouched","useFieldInitialValue","useFieldInitialTouched","useFieldInitialError","useInitialValues","useInitialTouched","useInitialErrors","useInitialStatus","useErrors","update","useValues","useTouched","useSetTouched","useSetValues","useSetErrors","useStatus","useSetStatus","useSubmitForm","useIsSubmitting","useResetForm","useIsValid","useIsDirty","useValidateForm","useValidateField","Field","_validate","legacyBag","form","asElement","Form","action","_action","displayName","withFormik","mapPropsToValues","vanillaProps","config","createFormik","Component","componentDisplayName","constructor","C","actions","formikProps","mapPropsToStatus","mapPropsToErrors","mapPropsToTouched","renderFormComponent","hoistNonReactStatics","connect","Comp","WrappedComponent","move","array","from","to","copy","copyArrayLike","splice","swap","arrayLike","indexA","indexB","a","insert","replace","maxIndex","parseInt","max","el","FieldArrayInner","alterTouched","alterErrors","prevState","updateErrors","updateTouched","fieldError","fieldTouched","updateArrayField","cloneDeep","arr","unshift","remove","pop","bind","componentDidUpdate","prevProps","tmp","arrayHelpers","handlePush","handlePop","handleSwap","handleMove","handleInsert","handleReplace","handleUnshift","handleRemove","restOfFormik","FieldArray","ErrorMessage","touch","FastField","shouldUpdate"],"mappings":"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"}