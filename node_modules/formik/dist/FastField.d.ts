import { FieldInputProps, FieldMetaProps, GenericFieldHTMLAttributes, SharedFieldProps } from './types';
import { UseFieldProps } from './hooks';
export declare type FastFieldProps<FieldValue = any> = {
    field: FieldInputProps<FieldValue>;
    meta: FieldMetaProps<FieldValue>;
};
export declare type FastFieldConfig<V = any> = UseFieldProps<V> & SharedFieldProps<FastFieldProps<V>> & {
    /**
     * Override FastField's default shouldComponentUpdate
     * @deprecated
     */
    shouldUpdate?: (nextProps: any, props: {}) => boolean;
};
export declare function FastField<V = any>({ render, children, as: is, // `as` is reserved in typescript lol
component, shouldUpdate, ...props }: GenericFieldHTMLAttributes & FastFieldConfig<V>): any;
